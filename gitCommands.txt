1. For creating a folder we use mkdir & name of the folder that we want.
2. For creating a file inside a folder we use the touch command(which is a linux unix command)->(touch bishal.txt , will create a text/txt file named bishal)
3. Now I even learnt this new command that to go inside this bishal.txt file and write/add lines inside like I'm doing right now we can do it in the git bash using 
   the vi command( (vi bishal.txt , this will take you/open a new slide of the terminal where you can write whatever you want in the bishal.txt file , 
   this is what I'm doing right now, I've used this vi command and I'm writing these lines from the git bash directly and after writing these lines from bash 
   now you have to return back to the previous bash slide/terminal so thatyou'll do by pressing ctrl+c and you'll be directed to a box below in the same slide where 
   you have to type colon and x -> (:x), and hit enter and this will take you to your previous bash slide/terminal jaha sae tum vi.bishal.txt/vi.gitCommands type kar kae yaha aaye the)
4. I also learnt one more new command i.e the cat command which is used to enter inside any file and check what are the lines written inside that file and show those same lines in git bash (cat bishal.txt , will print all the lines I've wrote in this file).
5. If you want to restore your saved changes back to as it was before then you can use -> git restore --staged <filename> <- command and you will get all the same things that you had previously before staging(i.e agar guest ko photo click karne k liye stage par chada diya hai but you realised that unka pic already le chuke hai hum/you dont want to click their picture then for calling/restoring them back from the stage you use this restore wala command).
6. Now if you want to see all the commit's that you've made, so for that you use the -> git log <- command which will give you all the details of what all commits you made/whosoever has made it it'll show the author's name and at what date and time you made that commit.
7. For deleting any file use -> rm -rf fileName <- and your file will be deleted, and for permanently deleting this you need to commit/save your changes. Later on you can also get back you deleted files by implementing the below mentioned steps....
8. Now if you have mistakenly deleted your important file and you want to get back that file anyhow so you have a timeMachine in github by which you can get back the old things which you didn't wanted to delete, so for that you do git log by which you get to see all your commits, then (see below line)
   after doing git log you get all the previous commits now you can see that your deleted file k phle kon sa commit that so ab delete wale commit sae thik phle wale commit ya whichever commit you want to come back to -> so us commit ka hash set likha rhta hai commit k side me so just copy the hash set and,
   after copying the hash set just do git reset andPasteTheHashSetHere and hit enter and you will directly jump to this commit and iske bad jo v commit hua tha wo sab unlinked ho jiage and you get all the things and file jo is commit tak present tha tumhare pas. and you can again stage them back by doing git add . !!
 